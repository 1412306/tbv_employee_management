'use strict';

/**
 * Module dependencies.
 */
var fs = require('fs');
var path = require('path');

var _ = require('lodash');
var chalk = require('chalk');
var glob = require('glob');

/**
 * Validate NODE_ENV existence
 */
var validateEnvironmentVariable = function () {
    var environmentFiles = glob.sync('./config/env/' + process.env.NODE_ENV + '.js');
    try {
        if (fs.existsSync('./config/env/' + process.env.NODE_ENV + '.js')) {
            //file exists
        }
    } catch (err) {
        console.error(err, process.env.NODE_ENV)
    }
    if (!environmentFiles.length) {
        if (process.env.NODE_ENV) {
            console.error(chalk.red('+ Error: No configuration file found for "' + process.env.NODE_ENV + '" environment using development instead'));
        } else {
            console.error(chalk.red('+ Error: NODE_ENV is not defined! Using default development environment'));
        }

        process.env.NODE_ENV = 'development';
    }
    // Reset console color
    console.log(chalk.white(''));
};

const loadConfigFile = function (linkFile) {
    return (
        fs.existsSync(path.resolve(linkFile))
        && require(path.resolve(linkFile))
    ) || {}
};

/**
 * Initialize global configuration
 */
const initGlobalConfig = function () {
    // Validate NODE_ENV existence
    validateEnvironmentVariable();
    let environment = process.env.NODE_ENV;
    let defaultConfig = loadConfigFile('./config/env/default.js');
    // Get the current config
    let environmentConfig = loadConfigFile('./config/env/' + environment + '.js');

    let config = _.defaultsDeep({}, environmentConfig, defaultConfig);
    global.config = config;
};

/**
 * Set configuration object
 */
module.exports = initGlobalConfig;
